group 'excel2db'

apply plugin: 'java'
apply plugin: 'com.github.johnrengelman.shadow'

version '3.0'

buildscript {
    repositories {
        jcenter()
        maven {
              url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:4.0.3'
    }
}


sourceSets {
    main {
        java {
            exclude 'src/main/resources/excel2db.properties'
        }
    }
}

//For building a single jar with all dependencies run "gradlew shadowJar"
// Configure the shadow jar task
shadowJar {
    // exclude properties file from jar
    exclude('excel2db.properties')
    mergeServiceFiles()
    //here we set a name format of jar file
    archiveName = "excel2db-${version}.${extension}"
}


sourceCompatibility = '1.8'
targetCompatibility = '1.8'

repositories {
   mavenCentral()
}


dependencies {

   compile 'ch.qos.logback:logback-classic:1.2.2'
   compile 'javax.persistence:persistence-api:1.0.2'
   compile ('org.springframework:spring-context:4.3.7.RELEASE'){
       exclude module: 'commons-logging' // force Spring to use jcl-over-slf4j bridge
   }

   compile 'org.springframework.boot:spring-boot-starter-test:1.5.3.RELEASE'
   compile 'org.apache.poi:poi:4.0.1'
   compile 'org.apache.poi:poi-ooxml:4.0.1'
   compile 'org.apache.directory.studio:org.apache.commons.io:2.4'

   compile 'org.postgresql:postgresql:42.2.5'
   compile 'org.mongodb:mongodb-driver:3.5.0'


    //jdbc drivers -- oracle, the Oracle driver is officially NOT shared in the Maven Repo
   //because of license aspects
   compile files('libs/ojdbc6.jar')

   //Derby is used as a mockup object for In-Memory testing
   compile 'org.apache.derby:derby:10.13.1.1'

   compile('junit:junit:4.12'){
        exclude group: 'org.hamcrest'
   }
   compile 'org.hamcrest:hamcrest-library:1.3'

}


jar {

   manifest {

        attributes(
           "Implementation-Title": "Gradle",
           "Implementation-Version": version,
           "Main-Class": "excel2db.excel2db"
       )
    }

   from {
          configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
   }


//filtering out test classes, only test suites should be run
    test {
        testLogging.showStandardStreams = true
        testLogging.exceptionFormat = 'full'

        //exclude certain classes to avoid double running - suites + test classes
        exclude '**/InitInputFilesImplTest.class'
        exclude '**/PopulateTablePostgresImplTest.class'
        exclude '**/PopulateCellsImplTest.class'

    }

    //the copyFiles task executes right after the shadowJar and copy
    //the property and test files into the build folder
    task copyFiles  {
        doLast  {
            copy {
                from 'src/main/resources/excel2db.properties'
                into 'build/libs/'
            }
            copy {
                from '/test.xlsx'
                into 'build/libs/'
            }
        }
    }

    shadowJar.finalizedBy(copyFiles)

}





